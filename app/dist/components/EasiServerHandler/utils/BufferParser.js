const BufferStack=require("./BufferStack.js"),BufferParser=function(e={}){const t=e.lengthInt||4,n=e.headLen||4;let r,f,o;const c=e.bufferSize||102400,u=e.bigEndian||!1,a=e.type||32;let i;i=u?new BufferStack(c,t+n,t).setReadIntBE(a):new BufferStack(c,t+n,t).setReadIntLE(a),this.buffer2Json=function(e,c,u){if(void 0===e)return!1;const a=e.length;let s=new Buffer(e.length);e.copy(s,0,0,a);let l=0,B=a,d=!1;for(let e=0;e<s.length;e+=4){if(0!==s.readUInt32LE(e)){l=e,B=a-e,d=!0;break}}if(!0!==d)return!1;delete s,s=new Buffer(B),e.copy(s,0,l,B),e=s,i.putBuffer(e,(function(e){try{var a=new Buffer(t),i=new Buffer(n);e.copy(a,0,0,t),e.copy(i,0,t,n+t),r=a.readUInt32LE()-n,f=i.readUInt32LE(0),r<0&&(r=0);const u=new Buffer(r);e.copy(u,0,t+n,t+n+r);try{const e=u.toString("utf-8");o=""===e?"":JSON.parse(e)}catch(e){console.log("head指定body长度有问题")}let s={dataLen:r,id:f,content:o};console.log("传输数据: ",s),c&&c(s)}catch(e){log.error(e),u&&u(e)}}),(function(e){log.error(e),u&&u(e)}))},this.json2Buffer=function(e,t={},r,f){try{var o,c=new Buffer(4),u=new Buffer(4),a=JSON.stringify(e);const{id:f=0}=t;o=new Buffer(a),u.writeUInt32LE(f,0),c.writeUInt32LE(n+o.byteLength,0);var i=Buffer.concat([c,u,o]);r&&r(i)}catch(e){console.log(e)}}};module.exports=BufferParser;