var path=require("path"),electron=require("electron"),unusedFilename=require(APP_PATH+"/node_modules/unused-filename"),pupa=require(APP_PATH+"/node_modules/pupa"),app=electron.app;function registerListener(e,o={},r=(()=>{})){const n=(s,t,a)=>{const i=t.getTotalBytes(),d=o.directory||app.getPath("downloads"),l=unusedFilename.sync(path.join(d,t.getFilename())),p=o.errorMessage||"The download of {filename} was interrupted",u=o.errorTitle||"Download Error";o.saveAs||t.setSavePath(l),t.on("updated",(()=>{try{if(e.isDestroyed())return void t.cancel();const r=t.getReceivedBytes()/i;e.setProgressBar(r),"function"==typeof o.onProgress&&o.onProgress(r)}catch(e){}})),t.on("done",((s,i)=>{if(e.isDestroyed()||e.setProgressBar(-1),"interrupted"===i){const e=pupa(p,{filename:t.getFilename()});electron.dialog.showErrorBox(u,e),r(new Error(e))}else"completed"===i&&("darwin"===process.platform&&app.dock.downloadFinished(l),o.unregisterWhenDone&&a.session.removeListener("will-download",n),r(null,t))}))};e.webContents.session.on("will-download",n)}module.exports=(e={})=>{app.on("browser-window-created",((o,r)=>{registerListener(r,e)}))},module.exports.download=(e,o,r)=>new Promise(((n,s)=>{r=Object.assign({},r,{unregisterWhenDone:!0}),registerListener(e,r,((e,o)=>e?s(e):n(o))),e.webContents.downloadURL(o)}));