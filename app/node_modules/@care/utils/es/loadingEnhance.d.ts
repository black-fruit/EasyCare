interface ILoadingDecoratorOptions {
    loadingPrefix?: string;
    showLoading?(): void;
    hideLoading?(): void;
}
/**
 * class Xxx {
 *
 *  @loadingDecorator({ showLoading, hideLoading })// 参数可选
 *  someFunctionNeedToDecorator() {}
 *
 * }
 */
export declare const loadingDecorator: (options?: ILoadingDecoratorOptions | undefined) => (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<(...params: any[]) => Promise<any>>) => TypedPropertyDescriptor<(...params: any[]) => Promise<any>>;
/**
 * const enhancedFunc = loadingEnhance(function a() { //... }, { showLoading, hideLoading });
 * 第二个参数是可以选的。
 */
export declare const loadingEnhance: (originFunc: Function, options?: ILoadingDecoratorOptions | undefined) => (...params: any[]) => Promise<any>;
export {};
