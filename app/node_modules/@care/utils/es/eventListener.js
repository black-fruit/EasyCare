var EventListener = (function () {
    var eventObj = {};
    return {
        bind: function (name, callback) {
            if (!eventObj[name]) {
                eventObj[name] = [];
            }
            eventObj[name].push(callback);
        },
        // 一个事件，只绑定一个函数
        uniqueBind: function (name, callback) {
            eventObj[name] = [callback];
        },
        trigger: function (name) {
            var _a;
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            for (var index in eventObj[name]) {
                (_a = eventObj[name])[index].apply(_a, args);
            }
        },
        unbind: function (name) {
            if (!name) {
                eventObj = {};
                return;
            }
            if (!eventObj[name]) {
                return;
            }
            delete eventObj[name];
        },
        getStringifyEventObj: function () {
            return JSON.stringify(eventObj);
        }
    };
})();
export default EventListener;
