import url2blob from '../../../download-file/util/url-to-blob';
const xhrMockClass = {
  open            : jest.fn(),
  send            : jest.fn(),
  onload          : jest.fn(),
  onerror         : jest.fn()
}

describe('测试 url2blob 函数', () => {
  beforeEach(() => {
    xhrMockClass.status = undefined;
    xhrMockClass.response = undefined;
  })
  it('1. xhr 可以正常调用', () => {
    xhrMockClass.status = 200;
    xhrMockClass.response = 'ok';
    window.XMLHttpRequest = jest.fn().mockImplementation(() => xhrMockClass);
    
    url2blob('https://store-g1.seewo.com/09ebeb7ed8ff4cc986e7f98e64f7cda2').then(data => {
      expect(xhrMockClass.open).toBeCalled();
      expect(xhrMockClass.send).toBeCalled();
    })
    xhrMockClass.onload();
  })

  it('2. xhr 状态码200', () => {
    xhrMockClass.status = 200;
    xhrMockClass.response = 'ok';
    window.XMLHttpRequest = jest.fn().mockImplementation(() => xhrMockClass);
    
    url2blob('https://store-g1.seewo.com/09ebeb7ed8ff4cc986e7f98e64f7cda2').then(data => {
      expect(data).toBe('ok');
    })
    xhrMockClass.onload();
  })

  it('3. xhr 状态码不是200', () => {
    xhrMockClass.status = 500;
    window.XMLHttpRequest = jest.fn().mockImplementation(() => xhrMockClass);
    
    url2blob('https://store-g1.seewo.com/09ebeb7ed8ff4cc986e7f98e64f7cda2').catch(err => {
      expect(err).toBe(500);
    })
    xhrMockClass.onload();
  })

  it('4. xhr onerror触发', () => {
    window.XMLHttpRequest = jest.fn().mockImplementation(() => xhrMockClass);
    
    url2blob('https://store-g1.seewo.com/09ebeb7ed8ff4cc986e7f98e64f7cda2').catch(err => {
      expect(err).toBe('url2Blob error');
    })
    xhrMockClass.onerror();
  })
})