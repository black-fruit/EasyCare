import timeoutPromise from '../timeoutPromise';

describe('测试 timeoutPromise 函数', () => {
  it('1. promise是否正常工作', async () => {
    try {
      await timeoutPromise(100, 'timeout')
    } catch (error) {
      expect(error).toBe('timeout');
    }
  })

  it('2. promise是否正常工作, 不传reject参数', async () => {
    try {
      await timeoutPromise(100)
    } catch (error) {
      expect(error).toBe('promise timeout');
    }
  })

  it('3. promise是否正常工作, 不传超时参数', async () => {
    try {
      await timeoutPromise()
    } catch (error) {
      expect(error).toBe('promise timeout');
    }
  })

  it('4. timeoutPromise 与其他 promise 协同', async () => {
    const p1 = timeoutPromise(500, 'timeout');
    const p2 = new Promise(resolve => {
      setTimeout(() => {
        resolve('ok');
      }, 100);
    })
  
    const result = await Promise.race([p1, p2])
    expect(result).toBe('ok');
  })
})