{"version":3,"file":"electron-normalize.js","sourceRoot":"","sources":["../src/main/electron-normalize.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseSemver } from '@sentry/utils';\nimport { app, BrowserWindow, crashReporter, NativeImage, WebContents } from 'electron';\nimport { basename } from 'path';\n\nimport { Optional } from '../common/types';\n\nconst parsed = parseSemver(process.versions.electron);\nconst version = { major: parsed.major || 0, minor: parsed.minor || 0, patch: parsed.patch || 0 };\n\n/** Returns if the app is packaged. Copied from Electron to support < v3 */\nexport const isPackaged = (() => {\n  const execFile = basename(process.execPath).toLowerCase();\n  if (process.platform === 'win32') {\n    return execFile !== 'electron.exe';\n  }\n  return execFile !== 'electron';\n})();\n\n/** A promise that is resolved when the app is ready */\nexport const whenAppReady: Promise<void> = (() => {\n  return app.isReady()\n    ? Promise.resolve()\n    : new Promise<void>((resolve) => {\n        app.once('ready', () => {\n          resolve();\n        });\n      });\n})();\n\n/**\n * Electron >= 5 support full protocol API\n */\nexport function supportsFullProtocol(): boolean {\n  return version.major >= 5;\n}\n\nexport const EXIT_REASONS = [\n  'clean-exit',\n  'abnormal-exit',\n  'killed',\n  'crashed',\n  'oom',\n  'launch-failed',\n  'integrity-failure',\n] as const;\nexport type ExitReason = (typeof EXIT_REASONS)[number];\nexport const CRASH_REASONS: Readonly<ExitReason[]> = ['crashed', 'oom'] as const;\n\n/** Same as the Electron interface but with optional exitCode */\ntype RenderProcessGoneDetails = Optional<Electron.RenderProcessGoneDetails, 'exitCode'>;\n\n/**\n * Implements 'render-process-gone' event across Electron versions\n */\nexport function onRendererProcessGone(\n  reasons: Readonly<ExitReason[]>,\n  callback: (contents: WebContents, details: RenderProcessGoneDetails) => void,\n): void {\n  const supportsRenderProcessGone =\n    version.major >= 10 || (version.major === 9 && version.minor >= 1) || (version.major === 8 && version.minor >= 4);\n  if (supportsRenderProcessGone) {\n    app.on('render-process-gone', (_, contents, details) => {\n      if (reasons.includes(details.reason)) {\n        callback(contents, details);\n      }\n    });\n  } else {\n    onWebContentsCreated((contents) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (contents as any).on('crashed', (__: Electron.Event, killed: boolean) => {\n        // When using Breakpad, crashes are incorrectly reported as killed\n        const reason: ExitReason = usesCrashpad() && killed ? 'killed' : 'crashed';\n\n        if (reasons.includes(reason)) {\n          callback(contents, { reason });\n        }\n      });\n    });\n  }\n}\n\ntype Details = Optional<Electron.Details, 'exitCode'>;\n\n/**\n * Calls callback on child process crash if Electron version support 'child-process-gone' event\n */\nexport function onChildProcessGone(reasons: Readonly<ExitReason[]>, callback: (details: Details) => void): void {\n  if (version.major >= 11) {\n    app.on('child-process-gone', (_, details) => {\n      if (reasons.includes(details.reason)) {\n        callback(details);\n      }\n    });\n  } else {\n    // eslint-disable-next-line deprecation/deprecation\n    app.on('gpu-process-crashed', (_, killed) => {\n      const reason: ExitReason = killed ? 'killed' : 'crashed';\n\n      if (reasons.includes(reason)) {\n        callback({ type: 'GPU', reason });\n      }\n    });\n  }\n}\n\n/** Calls callback when BrowserWindow are created */\nexport function onBrowserWindowCreated(callback: (window: BrowserWindow) => void): void {\n  app.on('browser-window-created', (_, window) => {\n    // SetImmediate is required for window.id to be correct in older versions of Electron\n    // https://github.com/electron/electron/issues/12036\n    if (version.major >= 3) {\n      callback(window);\n    } else {\n      setImmediate(() => {\n        if (window.isDestroyed()) {\n          return;\n        }\n\n        callback(window);\n      });\n    }\n  });\n}\n\n/** Calls callback when WebContents are created */\nexport function onWebContentsCreated(callback: (window: WebContents) => void): void {\n  app.on('web-contents-created', (_, contents) => {\n    // SetImmediate is required for contents.id to be correct in older versions of Electron\n    // https://github.com/electron/electron/issues/12036\n    if (version.major >= 3) {\n      callback(contents);\n    } else {\n      setImmediate(() => {\n        if (contents.isDestroyed()) {\n          return;\n        }\n\n        callback(contents);\n      });\n    }\n  });\n}\n\n/**\n * Electron < 9 requires `crashReporter.start()` in the renderer\n */\nexport function rendererRequiresCrashReporterStart(): boolean {\n  if (process.platform === 'darwin') {\n    return false;\n  }\n\n  return version.major < 9;\n}\n\n/**\n * Uses Crashpad on Linux\n * https://github.com/electron/electron/issues/27859\n */\nfunction crashpadLinux(): boolean {\n  if (version.major >= 16) {\n    return true;\n  }\n\n  if (version.major < 15) {\n    return false;\n  }\n\n  // Crashpad Linux for v15 is behind a switch\n  return app.commandLine.hasSwitch('enable-crashpad');\n}\n\n/** Is using Crashpad */\nexport function usesCrashpad(): boolean {\n  return (\n    process.platform === 'darwin' ||\n    (process.platform === 'win32' && version.major >= 6) ||\n    (process.platform === 'linux' && crashpadLinux())\n  );\n}\n\n/**\n * Electron >= 9 uses `app.getPath('crashDumps')` rather than\n * `crashReporter.getCrashesDirectory()`\n */\nexport function getCrashesDirectory(): string {\n  return version.major >= 9\n    ? app.getPath('crashDumps')\n    : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (crashReporter as any).getCrashesDirectory();\n}\n\ninterface OlderBrowserWindow extends Omit<BrowserWindow, 'capturePage'> {\n  capturePage(callback?: (i: NativeImage) => void): void;\n}\n\n/** Captures a NativeImage from a BrowserWindow */\nexport function capturePage(window: BrowserWindow): Promise<NativeImage> {\n  // Pre-Electron 5, BrowserWindow.capturePage() uses callbacks\n  if (version.major < 5) {\n    return new Promise<NativeImage>((resolve) => {\n      (window as OlderBrowserWindow).capturePage(resolve);\n    });\n  }\n\n  return window.capturePage();\n}\n\n/**\n * Electron >= 25 support `protocol.handle`\n */\nfunction supportsProtocolHandle(): boolean {\n  return version.major >= 25;\n}\n\ninterface InternalRequest {\n  url: string;\n  body?: Buffer;\n}\n\n/**\n * Registers a custom protocol to receive events from the renderer\n *\n * Uses `protocol.handle` if available, otherwise falls back to `protocol.registerStringProtocol`\n */\nexport function registerProtocol(\n  protocol: Electron.Protocol,\n  scheme: string,\n  callback: (request: InternalRequest) => void,\n): void {\n  if (supportsProtocolHandle()) {\n    protocol.handle(scheme, async (request) => {\n      callback({\n        url: request.url,\n        body: Buffer.from(await request.arrayBuffer()),\n      });\n\n      return new Response('');\n    });\n  } else {\n    // eslint-disable-next-line deprecation/deprecation\n    protocol.registerStringProtocol(scheme, (request, complete) => {\n      callback({\n        url: request.url,\n        body: request.uploadData?.[0]?.bytes,\n      });\n\n      complete('');\n    });\n  }\n}\n"]}