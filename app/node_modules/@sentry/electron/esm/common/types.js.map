{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/common/types.ts"],"names":[],"mappings":"","sourcesContent":["export type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport type OrBool<T> = {\n  [P in keyof T]: T[P] | boolean;\n};\n\nexport type OrFalse<T> = {\n  [P in keyof T]: T[P] | false;\n};\n"]}