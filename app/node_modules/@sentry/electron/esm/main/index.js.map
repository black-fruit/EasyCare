{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/main/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAC;AAC1C,aAAa,CAAC,MAAM,CAAC,CAAC;AAEtB,OAAO,EAAE,YAAY,IAAI,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAEhE,OAAO,KAAK,wBAAwB,MAAM,gBAAgB,CAAC;AAoB3D,OAAO,EACL,uBAAuB,EACvB,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,cAAc,EACd,cAAc,EACd,eAAe,EACf,iBAAiB,EACjB,aAAa,EACb,GAAG,EACH,QAAQ,EACR,KAAK,EACL,gBAAgB,EAChB,UAAU,EACV,QAAQ,EACR,SAAS,EACT,MAAM,EACN,OAAO,EACP,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,cAAc,GACf,MAAM,cAAc,CAAC;AAGtB,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAErE,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAE,4BAA4B,EAAE,MAAM,mCAAmC,CAAC;AACjF,MAAM,CAAC,MAAM,YAAY,mCAAQ,wBAAwB,GAAK,gBAAgB,CAAE,CAAC;AAGjF,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,OAAO,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC","sourcesContent":["import { ensureProcess } from '../common';\nensureProcess('main');\n\nimport { Integrations as NodeIntegrations } from '@sentry/node';\n\nimport * as ElectronMainIntegrations from './integrations';\n\nexport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Request,\n  SdkInfo,\n  Event,\n  EventHint,\n  Exception,\n  Session,\n  // eslint-disable-next-line deprecation/deprecation\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  Stacktrace,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  createTransport,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  makeMain,\n  Scope,\n  startTransaction,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n  FunctionToString,\n  InboundFilters,\n} from '@sentry/core';\n\nexport type { NodeOptions } from '@sentry/node';\nexport { flush, close, NodeClient, lastEventId } from '@sentry/node';\n\nexport { makeElectronTransport } from './transports/electron-net';\nexport { makeElectronOfflineTransport } from './transports/electron-offline-net';\nexport const Integrations = { ...ElectronMainIntegrations, ...NodeIntegrations };\n\nexport type { ElectronMainOptions } from './sdk';\nexport { init, defaultIntegrations } from './sdk';\nexport { IPCMode } from '../common';\n"]}